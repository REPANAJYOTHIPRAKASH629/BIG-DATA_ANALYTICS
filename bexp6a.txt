import java.io.IOException;
import java.util.StringTokenizer;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class SalesAnalysis {

    public static class SalesMapper extends MapperObject, Text, Text, DoubleWritable {
        
        private Text productCategory = new Text();
        private DoubleWritable salesAmount = new DoubleWritable();

        public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
            StringTokenizer itr = new StringTokenizer(value.toString(), ,);
             Skip store name
            itr.nextToken();
            String category = itr.nextToken().trim();
            double amount = Double.parseDouble(itr.nextToken().trim());
            productCategory.set(category);
            salesAmount.set(amount);
            context.write(productCategory, salesAmount);
        }
    }

    public static class SalesReducer extends ReducerText, DoubleWritable, Text, DoubleWritable {
        
        private DoubleWritable totalSales = new DoubleWritable();

        public void reduce(Text key, IterableDoubleWritable values, Context context)
                throws IOException, InterruptedException {
            double sum = 0;
            for (DoubleWritable val  values) {
                sum += val.get();
            }
            totalSales.set(sum);
            context.write(key, totalSales);
        }
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, Sales Analysis);
        job.setJarByClass(SalesAnalysis.class);
        job.setMapperClass(SalesMapper.class);
        job.setReducerClass(SalesReducer.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(DoubleWritable.class);
        FileInputFormat.addInputPath(job, new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));
        job.waitForCompletion(true);
    }
}